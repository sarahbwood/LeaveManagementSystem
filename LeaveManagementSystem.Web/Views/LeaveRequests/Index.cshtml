@using LeaveManagementSystem.Application.Models.LeaveRequests
@using LeaveManagementSystem.Application.Services.LeaveRequests
@model IEnumerable<LeaveRequestReadOnlyVM>

@{
	ViewData["Title"] = "Leave Requests List";
}

<h1>Leave Requests</h1>

<p>
	<a asp-action="Create" class="btn btn-primary">Request Leave</a>
</p>
<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.LeaveType)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.StartDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.EndDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.NumberOfDays)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.LeaveRequestStatus)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			var className = string.Empty;

			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.LeaveType)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.StartDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.EndDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.NumberOfDays)
				</td>
				<td>
					@switch (item.LeaveRequestStatus)
					{
						case LeaveRequestStatusEnum.Pending:
							className = "warning";
							break;
						case LeaveRequestStatusEnum.Approved:
							className = "success";
							break;
						case LeaveRequestStatusEnum.Declined:
							className = "danger";
							break;
						case LeaveRequestStatusEnum.Cancelled:
							className = "dark";
							break;
					}

					<span class="badge rounded-pill bg-@className">
						@item.LeaveRequestStatus.ToString()
					</span>
				</td>
				<td>
					@if (item.LeaveRequestStatus == LeaveRequestStatusEnum.Pending)
					{
						<button data-id="@item.Id" class="btn btn-danger cancelBtn">Cancel</button>
					}
				</td>
			</tr>
		}
	</tbody>
</table>

<form asp-action="Cancel" id="cancelForm">
	<input type="hidden" name="id" id="leaveRequestId" />
</form>

@section Scripts {
	<script>
		const swalBootstapButtons = Swal.mixin({
			customClass:{
				cancelButton: "btn btn-primary",
				confirmButton: "btn btn-danger"
			},
			buttonStyling: false
		});
		
		$(function () {
			$('.cancelBtn').click(
				function (e) {
					swalBootstapButtons.fire({
						title: "Are you sure?",
						text: "Are you sure you'd like to cancel this leave request?",
						icon: "warning",
						showCancelButton: true,
						confirmButtonText: "Yes, cancel it"
					})
					.then((result) => {
						if (result.isConfirmed) {
							var btn = $(this); // this - element that triggered the event
							var id = btn.data('id'); // get the data attribute value with the key id
							$('#leaveRequestId').val(id); // set the value of the hidden input field
							$('#cancelForm').submit();
						}
					});// promise - allow us to look at the result of the alert
				}
			);
		});
	</script>
}